  drawChart(a, b, c, s) {
    let display = (0 == this.viewItems.size ? 'none' : 'block');
    for (let e of this.allItems) {
      this.graph[e].style.display = display;
      this.panel[e].style.display = display;
    }
    if (0 == this.viewItems.size) return;
    s.min = c.min;
    s.max = c.max;
    if ('bar' == this.type && undefined == this.data.raw.stacked) {
      this.drawBarChart(a, b, c, s);
    } else if ('bar' == this.type && true == this.data.raw.stacked) {
      this.drawStackedBarChart(a, b, c, s);
    } else if ('line' == this.type) {
      this.drawLineChart(a, b, c, s);
    } else if ('area' == this.type) {
      this.drawAreaChart(a, b, s);
    } else if ('pie' == this.type) {
      // this.drawPie(a, b, s);
      if (s == this.graph) this.drawPie(a, b, s);
      if (s == this.panel) this.drawStackedBarChart(a, b, c, s);
    }
    if (s == this.graph) {
      this.scaleXAxis();
      if (true == this.data.raw.y_scaled) {
        for (let e of Array.from(this.allItems).sort()) {
          this.scaleYAxis(this.graph.mm[e]);
          break;
        }
      } else {
        this.scaleYAxis(c);
      }
    }
  }
