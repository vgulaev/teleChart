  drawPie() {
    let cx = Math.floor(this.width / 2), cy = Math.floor(this.height / 2);
    let r = Math.floor(Math.min(cx, cy) * 0.9);
    let t = 0, tx, ty, l, k, o;
    let ex, ey;
    if (undefined == this.data.rndX) this.data.rndX = Math.random() * 50;
    let sx = r * Math.cos(2 * Math.PI * this.data.rndX / 100) + cx;
    let sy = -r * Math.sin(2 * Math.PI * this.data.rndX / 100) + cy;
    let lA;
    let y = this.data.pie;
    for (let e of this.allItems) {
      t += y[e];
      ex = r * Math.cos(2 * Math.PI * (t + this.data.rndX) / 100) + cx;
      ey = -r * Math.sin(2 * Math.PI * (t + this.data.rndX) / 100) + cy;
      lA = 0;
      if (y[e] > 50) lA = 1;
      o = this.data.factor[e];
      TC20.setA(this.graph[e], {d: `M${sx},${sy}A${r},${r},0,${lA},0,${ex},${ey}L${cx},${cy}`, opacity: o});
      // console.log(y[e]);
      this.graph.text[e].innerHTML = y[e].toFixed(1) + '%';
      let coord = this.graph.text[e].getBBox();
      tx = (sx + ex) / 2;
      ty = (sy + ey) / 2;
      l = ((tx - cx) ** 2 + (ty - cy) ** 2) ** 0.5;
      k = r * 0.7 / l;
      tx = (tx - cx) * k + cx;
      ty = (ty - cy) * k + cy;
      if (y[e] < 7) o = 0;
      if (y[e] > 50) {
        tx = 2 * cx - tx;
        ty = 2 * cy - ty;
      }
      TC20.setA(this.graph.text[e], {x: tx - coord.width / 2 , y: ty + coord.height / 2, opacity: o, 'fill-opacity': o});

      sx = ex;
      sy = ey;
    }
  }
