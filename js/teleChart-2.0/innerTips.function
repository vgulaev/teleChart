  innerTips() {
    let r, s = 0, d, z;
    if ('pie' == this.type) {
      d = ''
    } else {
      d = (true == this.zoomMode) ? this.wwDDmmHH(this.data.x[this.pointer.curX]) : this.wwDDmmYY(this.data.x[this.pointer.curX]);
    }
    if ('area' == this.type) {
      r = [`<td colspan=2><b>${d}</b></td><td style='text-align: right; color: #D2D5D7'>&gt;</td>`];
      for (let e of this.viewItems) {
        s += this.data.y[e][this.pointer.curX];
        r.push(`<td style='text-align: right;'><b>${this.graph.p[e][this.pointer.k].toFixed(1)}%</b></td><td>${this.data.raw.names[e]}</td><td style='text-align: right; color:${this.data.raw.colors[e]}'><b>${this.labelFormat(this.data.y[e][this.pointer.curX])}</b></td>`);
      }
    } else {
      r = [`<td><b>${d}</b></td><td style='text-align: right; color: #D2D5D7'>&gt;</td>`];
      for (let e of this.viewItems) {
        if ('pie' == this.type) {
          let [a, b] = this.getABfromScroll();
          const reducer = (accumulator, currentValue) => accumulator + currentValue;
          z = this.data.y[e].slice(a, b + 1).reduce(reducer);
        } else {
          z = this.data.y[e][this.pointer.curX];
        }
        s += z;
        r.push(`<td>${this.data.raw.names[e]}</td><td style='text-align: right; color:${this.data.raw.colors[e]}'><b>${this.labelFormat(z)}</b></td>`);
      }
      if ('line' != this.type && this.viewItems.size > 1) r.push(`<td>All</td><td style='text-align: right;'><b>${this.labelFormat(s)}</b></td>`);
    }
    return `<table style='margin: 5px;'>${r.map(e => `<tr>${e}</tr>`).join('')}</table>`;
  }
