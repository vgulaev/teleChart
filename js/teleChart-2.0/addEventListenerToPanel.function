  addEventListenerToPanel() {
    let s = this.panel.scrollBox, p = this.svgPanel;

    p.addEventListener('mousedown', (e) => {
      this.onStart(e.pageX, 0);
    });

    p.addEventListener('touchstart', (e) => {
      this.onStart(Math.round(e.touches[0].pageX), 0.1);
    });

    p.addEventListener('mousemove', (e) => {
      this.onMove(Math.round(e.pageX));
    });

    p.addEventListener('touchmove', (e) => {
      this.onMove(Math.round(e.touches[0].pageX));
    });

    p.addEventListener('mouseup', (e) => {
      s.target = undefined;
    });

    p.addEventListener('mouseleave', (e) => {
      s.target = undefined;
    });

    document.addEventListener('touchend', (e) => {
      s.target = undefined;
      this.removePointer();
    });

    this.svgRoot.addEventListener('mousemove', e => {
      this.onMoveGraph(Math.round(e.pageX), Math.round(e.pageY), Math.round(e.clientY));
    });

    this.svgRoot.addEventListener('touchmove', (e) => {
      this.onMoveGraph(Math.round(e.touches[0].pageX), Math.round(e.touches[0].pageY), Math.round(e.touches[0].clientY));
    });

    this.svgRoot.addEventListener('mouseleave', (e) => {
      this.removePointer();
    });

    this.svgRoot.addEventListener('click', (e) => {
      this.clickZoom();
    });

    this.divTips.addEventListener('click', (e) => {
      this.clickZoom();
    });
  }
